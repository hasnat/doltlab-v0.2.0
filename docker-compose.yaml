
#
# THIS FILE IS GENERATED AUTOMATICALLY AND SHOULD NOT BE EDITED DIRECTLY
#

version: "3.9"  # optional since v1.27.0
services:
  doltlabdb:
    image: public.ecr.aws/dolthub/doltlab/postgres-server:v0.2.0
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      DOLTHUBAPI_PASSWORD: "${DOLTHUBAPI_PASSWORD}"
#    networks:
#      - doltlab
    volumes:
      - doltlabdb-data:/var/lib/postgresql/data


  doltlabenvoy:
     image: envoyproxy/envoy-alpine:v1.18-latest
     command:
       -c /envoy.yaml
     ports:
       - "80:80"
       - "4321:4321"
#     networks:
#       - doltlab
     volumes:
       - ${PWD}/envoy.yaml:/envoy.yaml

  doltlabfileserviceapi:
#     depends_on:
#        - doltlabenvoy
     image: public.ecr.aws/dolthub/doltlab/fileserviceapi-server:v0.2.0
     command:
       -no-auth
       -outboundInternalServiceEndpointHost doltlabenvoy
       -outboundInternalServiceEndpointPort 9480
       -port 60055
       -dir /doltlab-user-uploads
     environment:
       BUILD_SCM_REVISION: doltlabfileserviceapi-v0.2.0
       VIRTUAL_HOST: "doltlabfileserviceapi${ENV_DOMAIN}"
       VIRTUAL_PORT: 60055
       CERT_NAME: "${ENV_DOMAIN}"
       VHOST_LOCATION_CONF: "  
    proxy_http_version 1.1;
    client_max_body_size 200M;
    proxy_buffer_size       8192k; proxy_buffers           8 2048k; proxy_busy_buffers_size 8192k;
    add_header 'Access-Control-Allow-Origin' 'https://doltlabui${ENV_DOMAIN}';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Headers' 'Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,dolthubapi-uploader-id,content-md5';
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
    add_header 'Vary' 'Origin';

    if ($$request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'https://doltlabui${ENV_DOMAIN}';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Headers' 'Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,dolthubapi-uploader-id,content-md5';
      add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
      add_header 'Vary' 'Origin';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }"
       SERVER_PASS: proxy_pass http://doltlabfileserviceapi:60055
#     networks:
#       - doltlab
     volumes:
       - doltlab-user-uploads:/doltlab-user-uploads

  doltlabremoteapi:
#    depends_on:
#      - doltlabdb
#      - doltlabenvoy
#      - doltlabfileserviceapi
    image: public.ecr.aws/dolthub/doltlab/doltremoteapi-server:v0.2.0
    command:
      -alsologtostderr
      -http-host doltlabremoteapi
      -http-port 100
      -outboundInternalServiceEndpointHost doltlabenvoy
      -outboundInternalServiceEndpointPort 9480
      -backing-store local
      -dir /doltlab-remote-storage
#    ports:
#      - "50051:50051"
#      - "100:100"
    environment:
      BUILD_SCM_REVISION: doltlabremoteapi-v0.2.0
#      VIRTUAL_HOST: "doltlabremoteapi${ENV_DOMAIN}"
#      VIRTUAL_PORT: "100"
#      VIRTUAL_PROTO: grpc
#    networks:
#      - doltlab
    volumes:
      - doltlab-remote-storage:/doltlab-remote-storage




  doltlabapi:
#    depends_on:
#      - doltlabdb
#      - doltlabenvoy
#      - doltlabremoteapi
#      - doltlabfileserviceapi
    image: public.ecr.aws/dolthub/doltlab/dolthubapi-server:v0.2.0
    command:
      -alsologtostderr
      -doltlab
      -outboundInternalServiceEndpointHost doltlabenvoy
      -iterTokenEncKeysFile /iter_token.keys
      -iterTokenDecKeysFile /iter_token.keys
      -postgres
      -processAsyncTasks
      -dolthubWhitelistAllowAll
      -port 60051
      -pghost doltlabdb
      -userImportUploadsFileServiceBrowserHost "https://doltlabfileserviceapi${ENV_DOMAIN}"
      -userImportUploadsFileServiceServerHost http://doltlabenvoy:4321
      -noReplyEmail "${NO_REPLY_EMAIL}"
      -websiteURL "https://doltlabui${ENV_DOMAIN}"
      -emailHost "${EMAIL_HOST}"
      -emailPort "${EMAIL_PORT}"
      -emailUsername "${EMAIL_USERNAME}"
      -emailPassword "${EMAIL_PASSWORD}"
#-userImportUploadsFileServiceBrowserHost "httsp://doltlabfileserviceapi${ENV_DOMAIN}
#-userImportUploadsFileServiceServerHost http://doltlabfileserviceapi:60055

# orginials
#      -userImportUploadsFileServiceBrowserHost "http://${HOST_IP}:4321"
#      -userImportUploadsFileServiceServerHost http://doltlabenvoy:4321

#    networks:
#      - doltlab
    environment:
      BUILD_SCM_REVISION: doltlab-dolthubapi-v0.2.0
      MAILCHIMP_LIST_ID: does_not_work
      MAILCHIMP_API_KEY: does_not_work
      STRIPE_API_KEY: does_not_work
      DOLTHUBAPI_PASSWORD: "${DOLTHUBAPI_PASSWORD}"
      VIRTUAL_HOST: "doltlabapi${ENV_DOMAIN}"
      VIRTUAL_PORT: 60051
#      VIRTUAL_PROTO: grpc
#      VHOST_LOCATION_CONF: "proxy_buffer_size       8192k;proxy_buffers           8 2048k; proxy_busy_buffers_size 8192k;"
#      VHOST_LOCATION_CONF: "grpc_set_header         x-doltremoteapi-is-authorized true;"
#      VHOST_SERVER_CONF: " large_client_header_buffers 8 256k; client_body_buffer_size 200m;"

    volumes:
      - ${PWD}/iter_token.keys:/iter_token.keys


  doltlabgraphql:
#    depends_on:
#      - doltlabdb
#      - doltlabenvoy
#      - doltlabremoteapi
#      - doltlabapi
#      - doltlabfileserviceapi
    image: public.ecr.aws/dolthub/doltlab/dolthubapi-graphql-server:v0.2.0
#    networks:
#      - doltlab
    environment:
      VIRTUAL_HOST: "doltlabgraphql${ENV_DOMAIN}"
      VIRTUAL_PORT: 9000
#      VIRTUAL_PROTO: grpc
      VHOST_HTTP_CONF: " http2_max_field_size  1m; http2_max_header_size 1m; http2_recv_buffer_size 1m; http2_chunk_size 1m; "
      CERT_NAME: "${ENV_DOMAIN}"
#      DOLTHUBAPI_URL: http://doltlabapi:60051
      DOLTHUBAPI_URL: http://doltlabenvoy:9443
      NODE_ENV: development


  doltlabui:
#    depends_on:
#      - doltlabdb
#      - doltlabenvoy
#      - doltlabremoteapi
#      - doltlabapi
#      - doltlabgraphql
#      - doltlabfileserviceapi
    image: public.ecr.aws/dolthub/doltlab/dolthub-server:v0.2.0
    environment:
      VIRTUAL_HOST: "doltlabui${ENV_DOMAIN}"
      VIRTUAL_PORT: 3000
      CERT_NAME: "${ENV_DOMAIN}"
      VHOST_SERVER_CONF: "set $$routetarget doltlabgraphql:9000; location /graphql { proxy_pass http://$$routetarget; } "
      NODE_OPTIONS: "--max-old-space-size=16384"
      DOLTHUB_VERSION: "doltlab-v0.2.0"
      STRIPE_API_KEY: "does_not_work"
#      HOST_IP: "${HOST_IP}"
      HOST_IP: "doltlabui${ENV_DOMAIN}"
#      INTERNAL_GRAPHQLAPI_URL: "http://doltlabenvoy:10080/graphql"
      INTERNAL_GRAPHQLAPI_URL: "http://doltlabgraphql:9000/graphql"

      VHOST_LOCATION_CONF: "
      client_max_body_size 200M;
      add_header 'Access-Control-Allow-Origin' 'https://doltlabfileserviceapi${ENV_DOMAIN}';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Headers' 'Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,dolthubapi-uploader-id,content-md5';
      add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
      add_header 'Vary' 'Origin';

      if ($$request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://doltlabfileserviceapi${ENV_DOMAIN}';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,dolthubapi-uploader-id,content-md5';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
        add_header 'Vary' 'Origin';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }"
#    networks:
#      - doltlab


  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    restart: unless-stopped
    environment:
      - "CERT_NAME=${ENV_DOMAIN}"
      - "VIRTUAL_HOST=mailhog${ENV_DOMAIN}"
      - "VIRTUAL_PORT=8025"
#    networks:
#      - doltlab

  nginx:
    container_name: nginx
    image: hasnat/nginx-proxy:rc.combined.m1
    restart: unless-stopped
    environment:
      - "HTTP_PORT=8080"
#    networks:
#      - doltlab
    ports:
      - "8080:8080"
      - "443:443"
    volumes:
      - "${DA_SSL_CERTS_LOCATION}:/etc/nginx/certs:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
#networks:
#    doltlab:

volumes:
  doltlab-remote-storage: {}
  doltlabdb-data: {}
  doltlab-user-uploads: {}

