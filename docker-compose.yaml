
version: "3.9"  # optional since v1.27.0
services:

  doltlab-secrets-provisioner:
    image: alpine
    command:
      - sh
      - -c
      - |
        echo "$${ITER_TOKEN}" > /run/secrets/ITER_TOKEN
    volumes:
      - doltlab-secrets:/run/secrets:rw
    environment:
      - "ITER_TOKEN=${ITER_TOKEN}"

  doltlabdb:
    image: public.ecr.aws/dolthub/doltlab/postgres-server:v0.2.0
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      DOLTHUBAPI_PASSWORD: "${DOLTHUBAPI_PASSWORD}"
    volumes:
      - doltlabdb-data:/var/lib/postgresql/data

  doltlabenvoy:
     build: doltlabenvoy
     restart: unless-stopped
     expose:
       - "80"
       - "4321"
     entrypoint: ""
     command:
       - sh
       - -c
       - |
         cat envoy.tmpl | envsubst \$$ENV_DOMAIN > /usr/local/envoy.yaml
         echo "Starting Envoy"
         /docker-entrypoint.sh -c /usr/local/envoy.yaml -l "warning"

  doltlabfileserviceapi:
     image: public.ecr.aws/dolthub/doltlab/fileserviceapi-server:v0.2.0
     restart: unless-stopped
     expose:
       - 60055
     command:
       -no-auth
       -outboundInternalServiceEndpointHost doltlabenvoy
       -outboundInternalServiceEndpointPort 9480
       -port 60055
       -dir /doltlab-user-uploads
     environment:
       BUILD_SCM_REVISION: doltlabfileserviceapi-v0.2.0
       VIRTUAL_HOST: "doltlabfileserviceapi${ENV_DOMAIN}"
       VIRTUAL_PORT: 60055
       CERT_NAME: "${ENV_DOMAIN}"
       VHOST_LOCATION_CONF: "  
    proxy_http_version      1.1;
    client_max_body_size    200M;
    proxy_buffer_size       8192k;
    proxy_buffers           8 2048k;
    proxy_busy_buffers_size 8192k;
    add_header 'Access-Control-Allow-Origin' '${HTTP_PROTOCOL}://doltlabui${ENV_DOMAIN}';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Headers' 'Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,dolthubapi-uploader-id,content-md5';
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
    add_header 'Vary' 'Origin';

    if ($$request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '${HTTP_PROTOCOL}://doltlabui${ENV_DOMAIN}';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Headers' 'Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,dolthubapi-uploader-id,content-md5';
      add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
      add_header 'Vary' 'Origin';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }"
       SERVER_PASS: "proxy_pass http://doltlabfileserviceapi:60055"
     volumes:
       - doltlab-user-uploads:/doltlab-user-uploads

  doltlabremoteapi:
    image: public.ecr.aws/dolthub/doltlab/doltremoteapi-server:v0.2.0
    restart: unless-stopped
#      for local clone I needed this, tho this then breaks UI sql interactions!!! (may be duplicate this service)
#      -http-host doltlabremoteapihttp${ENV_DOMAIN}
#      -http-port 80
    command:
      -alsologtostderr
      -http-host doltlabremoteapi
      -http-port 100
      -outboundInternalServiceEndpointHost doltlabenvoy
      -outboundInternalServiceEndpointPort 9480
      -backing-store local
      -dir /doltlab-remote-storage
    expose:
      - "50051"
      - "100"
    environment:
      BUILD_SCM_REVISION: doltlabremoteapi-v0.2.0
      VIRTUAL_HOST: "doltlabremoteapi${ENV_DOMAIN}"
      VIRTUAL_PORT: 50051
      VHOST_LOCATION_CONF: "
          #proxy_http_version      1.1;
          client_max_body_size    200M;
          proxy_buffer_size       8192k;
          proxy_buffers           8 2048k;
          proxy_busy_buffers_size 8192k;
        "
      SERVER_PASS: "grpc_pass grpc://doltlabremoteapi:50051"
#      SERVER_PASS: "proxy_pass http://doltlabremoteapi:100"
    volumes:
      - doltlab-remote-storage:/doltlab-remote-storage

  doltlabremoteapihttp:
    container_name: doltlabremoteapihttp
    image: alpine/socat
    expose:
      - "80"
    command: "TCP4-LISTEN:80,fork TCP:doltlabremoteapi:80"
    environment:
      - VIRTUAL_HOST=doltlabremoteapihttp${ENV_DOMAIN}
      - VIRTUAL_PORT=80
      - ${HTTP_PROTOCOL}_METHOD=noredirect

  doltlabapi:
    image: public.ecr.aws/dolthub/doltlab/dolthubapi-server:v0.2.0
    restart: unless-stopped
    expose:
      - 60051
    command:
      -alsologtostderr
      -doltlab
      -outboundInternalServiceEndpointHost doltlabenvoy
      -iterTokenEncKeysFile /run/secrets/ITER_TOKEN
      -iterTokenDecKeysFile /run/secrets/ITER_TOKEN
      -postgres
      -processAsyncTasks
      -dolthubWhitelistAllowAll
      -port 60051
      -pghost doltlabdb
      -userImportUploadsFileServiceBrowserHost "${HTTP_PROTOCOL}://doltlabfileserviceapi${ENV_DOMAIN}"
      -userImportUploadsFileServiceServerHost http://doltlabenvoy:4321
      -noReplyEmail "${NO_REPLY_EMAIL}"
      -websiteURL "${HTTP_PROTOCOL}://doltlabui${ENV_DOMAIN}"
      -emailHost "${EMAIL_HOST}"
      -emailPort "${EMAIL_PORT}"
      -emailUsername "${EMAIL_USERNAME}"
      -emailPassword "${EMAIL_PASSWORD}"
    environment:
      BUILD_SCM_REVISION: doltlab-dolthubapi-v0.2.0
      MAILCHIMP_LIST_ID: does_not_work
      MAILCHIMP_API_KEY: does_not_work
      STRIPE_API_KEY: does_not_work
      DOLTHUBAPI_PASSWORD: "${DOLTHUBAPI_PASSWORD}"
      VIRTUAL_HOST: "doltlabapi${ENV_DOMAIN}"
      VIRTUAL_PORT: 60051
    volumes:
      - doltlab-secrets:/run/secrets:ro



  doltlabgraphql:
    image: public.ecr.aws/dolthub/doltlab/dolthubapi-graphql-server:v0.2.0
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: "doltlabgraphql${ENV_DOMAIN}"
      VIRTUAL_PORT: 9000
      VHOST_HTTP_CONF: " http2_max_field_size  1m; http2_max_header_size 1m; http2_recv_buffer_size 1m; http2_chunk_size 1m; "
      CERT_NAME: "${ENV_DOMAIN}"
      DOLTHUBAPI_URL: http://doltlabenvoy:9443
      NODE_ENV: development


  doltlabui:
    image: public.ecr.aws/dolthub/doltlab/dolthub-server:v0.2.0
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: "doltlabui${ENV_DOMAIN}"
      VIRTUAL_PORT: 3000
      CERT_NAME: "${ENV_DOMAIN}"
      VHOST_SERVER_CONF: "set $$routetarget doltlabgraphql:9000; location /graphql { proxy_pass http://$$routetarget; } "
      NODE_OPTIONS: "--max-old-space-size=16384"
      DOLTHUB_VERSION: "doltlab-v0.2.0"
      STRIPE_API_KEY: "does_not_work"
      HOST_IP: "doltlabui${ENV_DOMAIN}"
      INTERNAL_GRAPHQLAPI_URL: "http://doltlabgraphql:9000/graphql"

      VHOST_LOCATION_CONF: "
      client_max_body_size 200M;
      add_header 'Access-Control-Allow-Origin' '${HTTP_PROTOCOL}://doltlabfileserviceapi${ENV_DOMAIN}';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Headers' 'Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,dolthubapi-uploader-id,content-md5';
      add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
      add_header 'Vary' 'Origin';

      if ($$request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '${HTTP_PROTOCOL}://doltlabfileserviceapi${ENV_DOMAIN}';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,dolthubapi-uploader-id,content-md5';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
        add_header 'Vary' 'Origin';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }"


  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    restart: unless-stopped
    environment:
      - "VIRTUAL_HOST=mailhog${ENV_DOMAIN}"
      - "VIRTUAL_PORT=8025"

  nginx:
    container_name: nginx
    image: hasnat/nginx-proxy:rc.combined.m1
    restart: unless-stopped
    environment:
      - "HTTP_PORT=80"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "${SSL_CERTS_LOCATION}:/etc/nginx/certs:ro"
      - /var/run/docker.sock:/tmp/docker.sock:ro

volumes:
  doltlab-secrets: {}
  doltlab-remote-storage: {}
  doltlabdb-data: {}
  doltlab-user-uploads: {}

